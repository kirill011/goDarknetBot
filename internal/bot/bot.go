package bot

import (
	"fmt"
	"image/jpeg"
	"log"
	"os"
	"time"

	"goDark/internal/config"

	"goDark/internal/detector"

	tele "gopkg.in/telebot.v3"
)

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –±–æ—Ç–∞
type Telebot struct {
	n   *detector.Network //–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
	cfg *config.Config    //–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–∂–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ñ–∏–≥–∞
}

// —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–æ—Ç–∞
func NewBot(cfg *config.Config) (*Telebot, error) {
	network, err := detector.Init(cfg) //–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç—å
	if err != nil {
		return nil, err //–µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ—ë
	}
	return &Telebot{n: network, cfg: cfg}, nil //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
}

// –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
func (t Telebot) Init() {

	//–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
	pref := tele.Settings{
		Token:  t.cfg.ApiKey,
		Poller: &tele.LongPoller{Timeout: 10 * time.Second},
	}

	//—Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
	b, err := tele.NewBot(pref)
	if err != nil {
		log.Fatal(err)
		return
	}

	var (
		// –ö–û–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –º–µ–Ω—é
		menu = &tele.ReplyMarkup{ResizeKeyboard: true}

		// —Å–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–æ–∫
		btnHelp   = menu.Text("‚Ñπ –ü–æ–º–æ—â—å")
		btnDetect = menu.Text("üëÅ –î–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
	)

	//–æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
	menu.Reply(
		menu.Row(btnHelp),
		menu.Row(btnDetect),
	)

	//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ help
	b.Handle(&btnHelp, func(ctx tele.Context) error {
		ctx.Send("–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é(–∫–∞–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ –Ω–µ –∫–∞–∫ —Ñ–∞–π–ª), –∏ —è –ø—Ä–∏—à–ª—é –≤–∞–º —Ç–æ, —á—Ç–æ —É –º–µ–Ω—è –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–π—Ç–∏. –î–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –ø–æ–º–æ—â—å—é —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ darknet(–º–æ–¥–µ–ª—å yolov3-tiny)")
		for _, val := range t.n.N.ClassNames {
			ctx.Send(val)
		}
		return ctx.Send("–Ø —É–º–µ—é –Ω–∞—Ö–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —ç—Ç–∏ –∫–ª–∞—Å—Å—ã")
	})

	//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start
	b.Handle("/start", func(ctx tele.Context) error {
		return ctx.Send("–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–º–æ—â—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏", menu)
	})
	//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ detect
	b.Handle(&btnDetect, func(ctx tele.Context) error {
		//–¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
		b.Handle(tele.OnPhoto, t.photoHandler)
		return ctx.Send("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
	})

	//–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
	b.Start()
}

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
func (t *Telebot) photoHandler(ctx tele.Context) error {

	t.cfg.InfoLog.Println("–ù–∞—á–∏–Ω–∞—é –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
	ctx.Send("–ù–∞—á–∏–Ω–∞—é –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
	//–ø–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ
	photo := ctx.Message().Photo
	//–∫–∞—á–∞–µ–º —Ñ–æ—Ç–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ø–∞–ø–∫—É cache
	photoPath := fmt.Sprintf("internal/cache/%s.jpg", photo.FileID)
	if err := ctx.Bot().Download(&photo.File, photoPath); err != nil {
		t.cfg.ErrorLog.Println(err)
		ctx.Send("–û—à–∏–±–∫–∞ " + err.Error())
	}

	//–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∫–∞—á–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ
	infile, err := os.Open(photoPath)
	if err != nil {
		t.cfg.ErrorLog.Println(err)       //–ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
		ctx.Send("–û—à–∏–±–∫–∞ " + err.Error()) //–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É
	}
	defer infile.Close() //–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

	//–¥–µ–∫–æ–¥–∏—Ä—É–µ–º jpeg –≤ image.Image
	src, err := jpeg.Decode(infile)
	if err != nil {
		t.cfg.ErrorLog.Println(err)
		ctx.Send("–û—à–∏–±–∫–∞ " + err.Error())
	}

	//–î–µ—Ç–µ–∫—Ç–∏—Ä—É–µ–º
	count, err := t.n.Detect(t.cfg, &src, photo.FileID+"_detected")
	if err != nil {
		t.cfg.ErrorLog.Println(err)
		ctx.Send("–û—à–∏–±–∫–∞ " + err.Error())
	}
	//–∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏ cache
	detectedPhoto := tele.FromDisk(fmt.Sprintf("internal/cache/%s_detected.jpg", photo.FileID))
	detected := &tele.Photo{File: detectedPhoto}

	//–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
	ctx.Send(fmt.Sprintf("–†–∞—Å–Ω–æ–∑–Ω–∞–Ω–æ %d –æ–±—ä–µ–∫—Ç–æ–≤", count))

	t.cfg.InfoLog.Println("–ó–∞–∫–æ–Ω—á–∏–ª –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
	//–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ—Ç–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	return ctx.Send(detected)
}
